

-- 4 / 14 ------------------------------------------------------------------------//


-- 내장 함수 중에
--  날짜 / 시간 관련 함수
-- NULL 연산




-- 현재 시간 출력하기 : SELECT SYSDATE (), SELECT NOW ()

			SELECT NOW(), SYSDATE();
				-- 결과 2021-04-14 09:39:22|2021-04-14 09:39:22|

	
			SELECT CURDATE(), CURRENT_DATE(), CURRENT_TIME(); 
				-- 결과 2021-04-14|    2021-04-14|      09:40:22|
	
-- 로케일 적용 현재시간 출력 		
			SELECT CURRENT_TIMESTAMP();
			-- 결과 2021-04-14 09:41:29|
	
	
-- 다양한 시간/날짜 출력 : year, month, monthname, week, quater,
-- 					 weekday, weekofyear, yearofweek, day, 
-- 					 dayname, dayofyear, dayofmonth, dayofweek


		SELECT year(now()), month(now()), day(now());
				 			-- 결과  2021|  4|   14|
		SELECT MONTHNAME(now());
							-- 결과 April    
		SELECT dayname(now()); 
							-- 결과 Wednesday
		SELECT HOUR (now()), MINUTE (now()), SECOND (now());
							-- 결과   9| 49 | 16
              
  -- 1/4 분기
                SELECT QUARTER(now());
                          -- 결과 2 |
                SELECT WEEK(now()), WEEKDAY(now());
                            -- 결과
                            -- WEEK(now())|WEEKDAY(now())|
                            -- -----------|--------------|
                            --          15|             2|


                SELECT DAYOFWEEK(now());
                          -- 결과 4
                SELECT WEEKDAY('2021-04-14');		
                          -- 결과 2

-- 날짜/시간 변환 : str_date(문자열, 형식) , date_format (문자열, 형식)
		  -- 몇 자리만 쓰시오 /  -는 제외하시오 ~ 등등 이래라저래라 하는 이유
      

                        SELECT STR_TO_DATE('20210414', '%Y%m%d');
                                -- 4자리인 연도만 Y로 대문자 // 법칙이 있다우
                                -- 결과 : 2021-04-14|
                        SELECT STR_TO_DATE('04-14-21', '%m-%d-%y');
                                -- 결과 :  2021-04-14 오 대박! 알아서 정리해준다
                        SELECT STR_TO_DATE('101535', '%h%i%s'); 
                                -- 결과 : 10:15:35		
                        SELECT DATE_FORMAT(now(), '%b/%d/%a');
                                -- 결과 : Apr/14/Wed 
                        SELECT DATE_FORMAT(now(), '%h:%i:%s %p');
                                -- 결과 : 10:12:31 AM 



-- 날짜 더하기 : adddate(날짜, interval 숫자 날짜단위)

                      SELECT ADDDATE(now(), INTERVAL 99 day);
                      -- 오늘 1일을 제외하고 계산해줌
                      -- 결과 : 2021-07-22 10:18:29
                      SELECT ADDDATE(now(), INTERVAL 1 year);
                      -- 결과 : 2022-04-14 10:19:34|
                      SELECT ADDDATE(now(), INTERVAL 999 second);
                      -- 999 초 후는?  = 현재는  10:19:34
                      -- 결과 :		 2021-04-14 10:37:42|


                    SELECT SUBDATE(now(), INTERVAL 1000 day);
                    -- 1000일 전
                    -- 결과 2018-07-19 10:33:19|

		
-- 날짜를 덧셈 뺄셈으로도 

			
                      SELECT now() - INTERVAL  1000 day;
                      -- 결과  2018-07-19 10:34:56|
                      SELECT now() + INTERVAL  100 day;
                      -- 결과  2021-07-23 10:34:40|



			
-- NULL 처리 : in	full(컬럼명, 대체값)	●	●	●	●	●	●		●	●	●	●	●	●
-- 오라클에서는 NVL 함수
			
		
		
-- 조건에 따른 결과 생성 : case when 조건
-- then 참 결과 / else 기타 결과			
-- dayofweek 와 case로 일출력하기

                SELECT 
                case when DAYOFWEEK(CURDATE()) = 1 then '일요일'			
                   when DAYOFWEEK(CURDATE()) = 2 then '월요일'
                   when DAYOFWEEK(CURDATE()) = 3 then '화요일'
                   when DAYOFWEEK(CURDATE()) = 4 then '수요일'
                   when DAYOFWEEK(CURDATE()) = 5 then '목요일'
                   when DAYOFWEEK(CURDATE()) = 6 then '금요일'
                   when DAYOFWEEK(CURDATE()) = 7 then '토요일'
                 end '오늘의 요일';
                            --결과 :  수요일


	
-- 분석함수 / 윈도우 함수 	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●
		-- 행과 행사이의 관계를 정의하는 함수임
		-- over 절을 포함해서 분석결과를 봄
								
		-- 집계함수 : AVG, COUNT, SUM, MAX, MIN, 
		-- STDDEV(표준편차), VAROANCE (분산)
								
		-- 비집계 함수 : rank, lead, lag, row_number,
		-- dense_rank, cume_dist, first_value, last_value
								
		-- ROW_NUMBER : 순위를 번호로 출력
			SELECT from 
			

-- 다른 행의 값 참조하기 : lead(컬럼명, 간격) ,  lag(컬럼명, 간격)
			
			
	-- 모든 행에서 첫번째 값 가져오기 : FIRST_VALUE (컬럼명)	
	-- 모든 행에서 마지막 값 가져오기 : LAST_VALUE	( 컬럼명)		
	
			
-- Limit n : 위에서부터 n 개의 행을 가져오는 명령
-- Limit n,m  :  n 째부터 M까지의 행을 가져오는 명령
			
                        /*SELECT contactLastName, creditLimit 
                        from customers 
                        order by creditLimit desc
                        limit 5;					

                            SELECT contactLastName, creditLimit 
                        from customers 
                        order by creditLimit desc
                        limit 0, 5;									*/


			
			
			
			
			
			
	
			
			
-- sql 종합 중간 점검 문제 	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	●	● ●	●	●	●	●	●	●	●	●	●	●
		
			
			
			
-- 내가 혼자 해보고, 답지를 참조!!

			
			
			
			
-- 1. 직원employees의 모든 정보를 조회하세요

	select * from EMPLOYEES;

-- 1.2 고객customers의 모든 정보를 조회하세요

	select * from customers;

-- 1.3 상품products의 모든 정보를 조회하세요

	select * from products;

-- 2. 직원의 성과 이름, 직책을 조회하세요

	select FIRST_NAME, LAST_NAME, JOB_TITLE
	from EMPLOYEES;

-- 3. 직원의 성을 조회하세요. 단, 중복 제외

	select DISTINCT LAST_NAME 
	FROM EMPLOYEES;

-- 4. 고객 테이블에서 null이 아닌 주와 도시를 조회하세요. 단, 중복 제외

-- 5. 고객 테이블에서 USA의 주가 몇 개인지 조회하세요
-- 6. 고객 중 현금한도가 높은 순으로 5명을 조회하세요
-- 7. 직책이 Sales Rep이고 오피스코드가 1인 직원을 조회하세요
-- 8. 직책이 Sales Rep이 아니고, 오피스코드가 5이상인 직원을 조회하세요
-- 9. 고객의 성과 이름을 알파벳 순으로 조회하세요  
-- 10. 주문상세orderdetails에서 주문번호, 주문수량, 개별가격, 주문수량*개별가격으로 조회하세요
-- 11. 고객 테이블에서 국가가 USA, 주는 CA, 
-- 	 현금한도가 100000 이상인 고객의 성과 이름, 국가, 주, 현금한도를 조회하세요
-- 12. 고객 테이블에서 국가가 USA 또는 France 인 고객의 성과 이름, 국가를 조회하세요
-- 13. 주문 테이블에서 주문 번호가 10165, 10287, 10310인 주문의 
-- 	 주문번호 고객번호, 상태, 선적일자를 조회하세요
-- 14. 상품 테이블에서 구매가격이 90이상 100이하인 상품의 상품코드, 상품명, 가격을 조회하세요
-- 15. 주문 테이블에서 요구일자가 2003년 1월인 주문의 주문번호와 요구일자, 상태를 조회하세요
-- 16. 직원의 성이나 이름이 a로 시작하는 직원의 성과 이름을 조회하세요
-- 17. 직원의 성이나 이름이 on로 끝나는 직원의 성과 이름을 조회하세요
-- 18. 직원의 이름이 3자이며, T로 시작하고 m으로 끝나는 직원의 성과 이름을 조회하세요
-- 18.2 직원의 이름이 5자이며, j로 시작하고 e으로 끝나는 직원의 성과 이름을 조회하세요
-- 19. 고객 테이블에서 담당직원번호가 없는 고객의 이름과, 국가, 담당직원번호를 조회하세요
-- 20. 고객customer 이름별 주문orders 건수를 조회하세요
--  21. 상품코드, 상품이름, 상품설명을 조회하세요
--  22. 주문번호와 주문상태, 주문수량*개별가격을 조회하세요
--  23. 상품코드 S10_1678에 대한 주문번호와 상품이름, 딜러가msrp, 개별가격을 조회하세요
--  25. 고객customer 중 주문번호와 주문상태를 조회하세요. 단, 주문번호가 없는 고객도 포함한다
--  26. 고객customer 중 주문번호와 주문상태가 없는 고객을 조회하세요
-- 27. 주문중 주문번호와 고객번호, 상품코드를 조회하세요 단, 상품코드가 없는 주문도 포함한다
-- 28. 영업 사원 중 담당 고객이 없는 사원의 성과 이름, 직책, 고객이름을 조회하세요
-- 	단, 직책은 'Sales Rep'인 사원을 대상으로 한다
--  28-2. 고객 중 영업사원이 없는 고객의 이름, 직책, 사원의 성과 이름을 조회하세요    
--  29. 주문상태별로 주문상태, 주문금액(주문수량x개별금액)의 총합을 조회하세요  
--  30. 주문번호별로 주문번호, 주문금액(주문수량x개별금액)의 총합을 조회하세요
--  31. 주문년도별로  주문년도, 주문금액(주문수량x개별금액)의 총합을 조회하세요
-- 	단, 주문일자에서 년도만을 구하는 함수는 year() 이다
 -- 31-2. 주문년도별 주문건수를 조회하세요
 -- 32. 주문상태별 주문상태 수를 조회하세요
 -- 33. 주문번호별로 주문번호, 주문수량 총합,주문금액(주문수량x개별금액)의 총합을 조회하세요
 -- 	단, 주문금액이 1000이상, 주문수량이 600 이상을 대상으로 한다
 -- 34. 주문번호와 주문상태별로 그룹화한 후
 -- 	주문번호와 주문상태, 주문금액(주문수량x개별금액)의 총합을 조회하라
 -- 	단, 주문상태가 배송shipped, 주문금액이 1500이상을 대상으로 한다
 -- 35. USA에 있는 사무실에서 근무하는 사원의 성과 이름을 조회하세요
 -- 36. 지불금액이 가장 많은 고객의 고객번호,  체크번호, 지불금액을 조회하세요
-- 37. 평균 지불금액보다 많은 금액을 지불한 고객의 고객번호, 체크번호, 지불금액을 조회하세요
--  38. 주문을 한번도 하지 않은 고객의 이름을 조회하세요






						.
						.
						.
						.
						.
						.
						.
						.






--  ----------------------------------------------------
-- 
-- 
--						 답안지 !!!
-- 
--  ----------------------------------------------------


-- 별칭 붙이고 안붙이고의 차이는 무엇인가?!!!!!!!
-- where state is not null
-- and city is not null  	-- and로 연결한다! 둘다 공란 아니게
-- 식에 따라서는 이거나 = or 도 됨!


-- 1.2 고객customers의 모든 정보를 조회하세요

	select * from customers;

-- 1.3 상품products의 모든 정보를 조회하세요

	select * from products;

-- 2. 직원의 성과 이름, 직책을 조회하세요

	select firstName, LastName 
	from employees;

-- 3. 직원의 성을 조회하세요. 단, 중복 제외

	select DISTINCT contactFirstName
	FROM customers;

-- 4. 고객 테이블에서 null이 아닌 주와 도시를 조회하세요. 단, 중복 제외

		SELECT DISTINCT state, city
		FROM customers
		where state is not null
		and city is not null  	-- and로 연결한다! 둘다 공란 아니게
								-- 식에 따라서는 이거나 = or 도 됨!
		order by state;
		-- 결과 : 37개
	
	


-- 5. 고객 테이블에서 USA의 주가 몇 개인지 조회하세요
	
		SELECT 
		count (DISTINCT state) numOfState
		FROM customers
		where country = 'USA' 
		order by state;
	
				-- 8개....

	
-- 6. 고객 중 현금한도가 높은 순으로 5명을 조회하세요
	
		SELECT contactLastName, creditLimit 
		from customers
		order by creditLimit desc;
		-- ↓	
		
		SELECT contactLastName, creditLimit 
		from customers 
		order by creditLimit desc
		limit 0, 5;
	
		-- Limit n : 위에서부터 n 개의 행을 가져오는 명령
		-- Limit n,m  :  n 째부터 M까지의 행을 가져오는 명령
	
-- 7. 직책이 Sales Rep이고 오피스코드가 1인 직원을 조회하세요
	
			SELECT firstName, jobTitle, officeCode  
			FROM employees
			where jobTitle = 'Sales Rep' and officeCode= 1;
	
	
-- 8. 직책이 Sales Rep이 아니고, 오피스코드가 5이상인 직원을 조회하세요
		
			SELECT firstName, jobTitle, officeCode  
			FROM employees
			where jobTitle != 'Sales Rep' and officeCode >= 5;
		 -- is not 이 아니라 ! = 을 합쳐서 != 을 사용함!
		
		
-- 9. 고객의 성과 이름을 알파벳 순으로 조회하세요 
	
	SELECT contactFirstName, contactLastName
	FROM customers
	order by  contactFirstName, contactLastName ;
	-- 알파벳 순 정렬은 order by // ASD - 어센딩도 사용은 가능함

      
-- 10. 주문상세 orderdetails에서 주문번호, 주문수량, 개별가격, 주문수량*개별가격으로 조회하세요


				SELECT orderLineNumber, priceEach, quantityOrdered,
				(quantityOrdered *priceEach) saleprice
				FROM orderdetails
				ORDER BY quantityOrdered;
					

-- 11. 고객 테이블에서 국가가 USA, 주는 CA, 
-- 	 현금한도가 100000 이상인 고객의 성과 이름, 국가, 주, 현금한도를 조회하세요

			SELECT contactFirstName , contactLastName, 
			country , state, creditLimit 
			FROM customers
			WHERE country = 'USA' and state = 'CA'
			and creditLimit  >= 100000
			ORDER BY creditLimit;
		
-- 12. 고객 테이블에서 국가가 USA 또는 France 인 고객의 성과 이름, 국가를 조회하세요
		
				SELECT contactFirstName, contactLastName, country 
				FROM customers
				WHERE country in ('USA', 'France')
				ORDER BY country ;
				
-- 13. 주문 테이블에서 주문 번호가 10165, 10287, 10310인 주문의 
-- 	 주문번호 고객번호, 상태, 선적일자를 조회하세요
				
				SELECT orderNumber, customerNumber, status, shippedDate
				FROM orders
				WHERE orderNumber  in (10165, 10287, 10310)
				ORDER BY orderNumber ;
			
			
-- 14. 상품 테이블에서 구매가격이 90이상 100이하인 상품의 상품코드, 상품명, 가격을 조회하세요
			
				SELECT productCode, productName, buyprice, msrp
				FROM products
				WHERE buyPrice BETWEEN 90 AND 100
				ORDER BY productCode;
			
				-- 별칭 붙이고 안붙이고의 차이는 무엇인가?!!!!!!!
			
-- 15. 주문 테이블에서 요구일자가 2003년 1월인 주문의 주문번호와 요구일자, 상태를 조회하세요
			
				SELECT orderNumber, requiredDate, status  
				FROM orders 
				WHERE requiredDate  like '2003-01%'
				order by requiredDate ;
			
			
				SELECT year (requiredDate '2003-01%'), 
						month(requiredDate)  
				FROM orders 
				order by requiredDate ;
		
			
				SELECT orderNumber, requiredDate, status  
				FROM orders 
				WHERE left( requiredDate,4) = 2003 and
				mid(requiredDate, 6, 2) = 1
				order by requiredDate ;			
				
			
			
-- 16. 직원의 성이나 이름이 a로 시작하는 직원의 성과 이름을 조회하세요
			
			
-- 17. 직원의 성이나 이름이 on로 끝나는 직원의 성과 이름을 조회하세요
			
			
-- 18. 직원의 이름이 3자이며, T로 시작하고 m으로 끝나는 직원의 성과 이름을 조회하세요
			
			
			
-- 18.2 직원의 이름이 5자이며, j로 시작하고 e으로 끝나는 직원의 성과 이름을 조회하세요
			
			
			
-- 19. 고객 테이블에서 담당직원번호가 없는 고객의 이름과, 국가, 담당직원번호를 조회하세요
			
			
			
-- 20. 고객customer 이름별 주문orders 건수를 조회하세요
			
			
			
--  21. 상품코드, 상품이름, 상품설명을 조회하세요
			
			
			
--  22. 주문번호와 주문상태, 주문수량*개별가격을 조회하세요
			
			
			
--  23. 상품코드 S10_1678에 대한 주문번호와 상품이름, 딜러가msrp, 개별가격을 조회하세요
			
			
			
--  25. 고객customer 중 주문번호와 주문상태를 조회하세요. 단, 주문번호가 없는 고객도 포함한다
			
			
			
--  26. 고객customer 중 주문번호와 주문상태가 없는 고객을 조회하세요
			
			
			
-- 27. 주문중 주문번호와 고객번호, 상품코드를 조회하세요 단, 상품코드가 없는 주문도 포함한다
			
			
			
-- 28. 영업 사원 중 담당 고객이 없는 사원의 성과 이름, 직책, 고객이름을 조회하세요
-- 	단, 직책은 'Sales Rep'인 사원을 대상으로 한다
			
			
			
--  28-2. 고객 중 영업사원이 없는 고객의 이름, 직책, 사원의 성과 이름을 조회하세요  

			
			
--  29. 주문상태별로 주문상태, 주문금액(주문수량x개별금액)의 총합을 조회하세요  
			
			
			
--  30. 주문번호별로 주문번호, 주문금액(주문수량x개별금액)의 총합을 조회하세요
			
			
			
--  31. 주문년도별로  주문년도, 주문금액(주문수량x개별금액)의 총합을 조회하세요
-- 	단, 주문일자에서 년도만을 구하는 함수는 year() 이다
			
			
			
 -- 31-2. 주문년도별 주문건수를 조회하세요
			
			
			
 -- 32. 주문상태별 주문상태 수를 조회하세요
			
			
			
 -- 33. 주문번호별로 주문번호, 주문수량 총합,주문금액(주문수량x개별금액)의 총합을 조회하세요
 -- 	단, 주문금액이 1000이상, 주문수량이 600 이상을 대상으로 한다
			
			
			
 -- 34. 주문번호와 주문상태별로 그룹화한 후
 -- 	주문번호와 주문상태, 주문금액(주문수량x개별금액)의 총합을 조회하라
			
			
			
 -- 	단, 주문상태가 배송shipped, 주문금액이 1500이상을 대상으로 한다
			
			
			
 -- 35. USA에 있는 사무실에서 근무하는 사원의 성과 이름을 조회하세요
			
			
			
 -- 36. 지불금액이 가장 많은 고객의 고객번호,  체크번호, 지불금액을 조회하세요
			
			
			
-- 37. 평균 지불금액보다 많은 금액을 지불한 고객의 고객번호, 체크번호, 지불금액을 조회하세요
			
			
			
--  38. 주문을 한번도 하지 않은 고객의 이름을 조회하세요

				
