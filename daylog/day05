

나중에 배울 것 sql 함수

기본적인 SQL입력 방법, 문법을 알아야함
데이터베이스 연결하는 법도 - 이클립스와 연동안됨;
데이터에 자료 업뎃하기



-- HR


이 답지들은
PLAYGROUND DB에 넣을 거임!


-- 15. 급여가 12000 이상되는 직원들의 LAST_NAME 및 급여를 조회한다. 


              SELECT LAST_NAME, SALARY FROM EMPLOYEES;

              ↓

              SELECT LAST_NAME, SALARY FROM EMPLOYEES
              WHERE SALARY >= 12000
              ODER BY SALARY DESC;


-- 16. 사원번호가 176 인 사람의 LAST_NAME 과 부서 번호를 조회한다.

              SELECT LAST_NAME, DEPARTMENT_ID FROM EMPLOYEES;
              
              ↓
              
              SELECT LAST_NAME, DEPARTMENT_ID FROM EMPLOYEES;
              WHERE EMPLOYEE_ID = 176;


-- 17. 급여가 5000 에서 12000의 범위 이외인 사람들의 LAST_NAME 및 급여를 조회한다.
              
              SELECT LAST_NAME, SALARY FROM EMPLOYEES;
              
              SELECT LAST_NAME, SALARY FROM EMPLOYEES
              WHERE SALARY < 5000 OR SALARY > 12000;
             
                    //5보다 작고 12보다는 커야하므로 AMD가 아니라 OR로 연결함!
                    // <- 1 2 3 4  ㅣ_____↔____ ㅣ 13 14 15 16 ->

              SELECT LAST_NAME, SALARY FROM EMPLOYEES
              WHERE SALARY < 5000 OR SALARY > 12000;
              ORDER BY SALARY;
              


-- 18. 20 번 또는 50 번 부서에 근무하며, 급여가 5000 ~ 12,000 사이인 사원들의 LAST_NAME 및 급여을 조회한다.

             SELECT LAST_NAME, SALARY FROM EMPLOYEES
             WHERE DEPARTMENT_ID IN (20,50);

              ↓
              
             SELECT LAST_NAME, DEPARTMNET_ID, SALARY 
             FROM EMPLOYEES
             WHERE DEPARTMENT_ID IN (20,50)
             AND SALARY BETWEEN 5000 AND 12000;
             ORDER BY DEPARTMENT_ID, SALARY;


-- 19. LAST_NAME 의 네번째 글자가 a인 사원들의 LAST_NAME 을 조회한다.


            SELECT LAST_NAME  FROM EMPLOYEES
            WHERE LAST_NAME LIKE'___a%';
          
          

-- 20. LAST_NAME 에 a 및/또는 e 글자가 있는 사원들의 LAST_NAME 을 조회힌다.

            SELECT LAST_NAME  FROM EMPLOYEES
            WHERE LAST_NAME LIKE '%a%' OR LAST NAME LIKE '%e%';
            -- 85

            SELECT LAST_NAME  FROM EMPLOYEES
            WHERE LAST_NAME LIKE '%a%' AND LAST NAME LIKE '%e%';
            -- 20
           
           
           
-- 21. 급여가 2500, 3500, 7000 이 아니며 직업이 SA_REP 이나 ST_CLERK 인 사람들을 조회한다.
            
            
            SELECT JOB_ID, SALARY FROM EMPLOYEES;
            
            ↓
            
            SELECT JOB_ID, SALARY FROM EMPLOYEES
            WHERE SALARY NOT IN (2500,3500,7000);
            
            ↓
            
            SELECT JOB_ID, SALARY FROM EMPLOYEES
            WHERE SALARY NOT IN (2500,3500,7000) AND
            JOB_ID IN ('SA_REP', 'ST_CLERK');
            ORDER BY JOB_ID , SALARY;
            
            
            
-- 22. 부서번호별 사원수를 조회하라. (부서번호 오름차순 정렬)
            
            SELECT COUT(EMPLOYEE_ID) 사원수 
                           -- ↑ PK를 넣어야함
            FROM EMPLOYEES
            GROUP BY DEPARTMENT_ID
            ORDER BY DEPARTMNET _ID;
                         
             
-- 23. 직무 아이디별 평균 급여를 조회하라. (직무 아이디 내림차순 정렬)
            
           SELECT JOB_ID, AVG(SALARY) 평균급여 FROM EMPLOYEES
           GROUP BY JOB_ID
           ORDER BY JOB_ID DESC; -- 내림차순 정렬
             
             
             
-- 24. 상사가 있는 사원들의 모든 정보를 조회하라.
            
            SELECT * FROM EMPLOYEES
            WHERE MANAGER_ID IS NOT NULL;
            
            
  
-- 25. 상사가 없는 사원들의 모든 정보를 조회하라.


            SELECT * FROM EMPLOYEES
            WHERE MANAGER_ID IS NULL;
            
            

-- 26. IT 부서의 급여 총합을 조회하라.

            -- 직책으로 찾기
            SELECT FROM EMPLOYEES
            WRERE JOB_ID LIKE 'IT%';             
            SELECT SUM(SALARY) 급여총합 FROM EMPLOYEES
            WRERE JOB_ID LIKE 'IT%';
            
            -- 부서로 찾기
            SELECT FROM EMPLOYEES
            WRERE JOB_ID LIKE 'IT%'; 
            SELECT SUM(SALARY) 급여총합 FROM EMPLOYEES
            WRERE DEPARTMENT_ID IN (60, 210, 230);

-- 27. 부서와 직무별 최대급여, 최소급여, 사원수를 조회하라.
            
                         
             SELECT DEPARTMENT_ID, JOB_ID, 
             MAX(SALARY)  최대급여 , MIN(SALARY) 최소급여,
             COUNT(EMPLOYEE_ID) 사원수
             FROM EMPLOYEES
             WHERE DEPARTMENT_ID IS NOT NULL; -- 부서 미소속 사원 제외하기
             GROUP BY DEPARTMENT_ID, JOB_ID;
             
            -- WHERE 절은 프롬과 그룹 바이 사이에 간다.
            -- FROM / WHERE / HAVING / GROUP BY 순으로 작성한다

            
                //이건 그냠 참조
                SELECT JOB_ID, COUNT(EMPLOYEE_ID) 총사원수
                 FROM EMPLOYEES
                 GROUP BY JOB_ID;
                 ↓
                 SELECT JOB_ID, COUNT(EMPLOYEE_ID) 총사원수
                 FROM EMPLOYEES
                 GROUP BY JOB_ID
                 HAVING JOB_ID LIKE '%MGR';

-- 28. 회사 전체의 최대 급여, 최소급여, 급여 총합 및 평균 급여를 조회하세요
            
                         
             
            

-- 29. 각 JOB_ID 별, 최대 급여, 최소 급여, 급여 총합 및 평균 급여를 정수로 포맷하여 조회하세요
            
                         
             
                         
             
-- 30. 직책별 사원 총 수를 조회하세요
            
                 SELECT JOB_ID, COUT(EMPLOYEE_ID) 총사원수
                 FROM EMPLOYEES
                 GROUP BY JOB_ID;
                         
                         
             
-- 31. 매니저로 근무하는 사원들의 총 수를 조회하세요

                                     
            SELECT COUNT (MANAGER_ID) 매니저사원수 FROM EMPLOYEES;
            
            
            ↓
            SELECT COUNT (DESC MANAGER_ID) 매니저사원수 
            FROM EMPLOYEES;
                        -- 매니저 ID 갖고 있는 직원으로 조회
                        
                        
                        
             
-- 32. 사내의 최대 급여 및 최소 급여의 차이를 조회하세요
            
                        
              SELECT MAX (SALARY)최대급여 , MIN(SALARY) 최소급여,
              MAX(SALARY) - MIN (SALARY) 급여차
              FROM EMPLOYEES;
             



// ----------------------------------------------------------------------------------



도서 가격을 내림 차순으로 같은 출판사 이름으로 오름차순

              SELECT PRICR, PUBLISHER FROM BOOKS
              ODER BY PRICE DESC, PUBLISHER;


고객이 주문한 도서 총 평균 최고 판매액 조회하시오

              SELECT SUM(SALEPRISE), AVG(SALEPRICE), MAX(SALEPRICE), MIN (SALEPRICE) 
              FROM BOOKORDERS;

                    고객 별 아냐?
              SELECT SUM(SALEPRISE) 총, AVG(SALEPRICE) 평균 , MAX(SALEPRICE) 최대, MIN (SALEPRICE) 최소 
              FROM BOOKORDERS
              GROUP BY CUSTID;



출판사별 도서의 총수량 조회  

              SELECT PUBLISHER, COUNT (BOOKID) 수량 FROM BOOKS
              GROUP BY PUBLISHER;




출판사별 도서의 총 수량이 2권 이상인 출판사를 조회


              SELECT PUBLISHER, COUNT (BOOKID) 수량 FROM BOOKS
              GROUP BY PUBLISHER;
                              -- HAVING은 조건절 
              HAVING 수량 >=2
              ORDER BY 수량;
              



가격이 8000원 이상인 도서를 구매한 고객별 주문 도서의 총수량은?

            8000원 이상 구매한 고객들을 추려서 총 수량을 내자
            
            SELECT FROM BOOKORDERS 
            WHERE SALEPRICE >= 8000;
           
           ↓
            SELECT CUSTID, COUNT(BOOKID) 수량
            FROM BOOKORDERS
            WHERE SALEPRICE >= 8000
            GROUP BY CUSTID;


가격이 8000원 이상인 도서를 구매한 고객별 주문 도서의 총수량은?
고객별 두권 이상 주문한 고객을 조회하시오
           
            SELECT CUSTID, COUNT(BOOKID) 수량
            FROM BOOKORDERS
            WHERE SALEPRICE >= 8000
            GROUP BY CUSTID
            HAVING 수량 >= 2;
            









